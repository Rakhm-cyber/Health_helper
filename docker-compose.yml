services:
    bot:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: telegram_bot
        depends_on:
            postgres:
                condition: service_healthy
            migrate:
                condition: service_completed_successfully
        networks:
            - bot
        deploy:
            resources:
                limits:
                    memory: 512M
            reservations:
                memory: 256M

    postgres:
        image: postgres:latest
        restart: always
        ports:
            - "${POSTGRES_PORT}:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_DB=${POSTGRES_DB}
        networks:
            - bot
        env_file:
            - .env
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5
    
    migrate:
        image: migrate/migrate
        depends_on:
            postgres:
                condition: service_healthy
        env_file: 
            - .env
        networks:
            - bot
        volumes:
            - ./migrations:/database/migrations
        command:
            [
                "-path",
                "/database/migrations/",
                "-database",
                "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable",
                "up",
            ]


volumes:
  postgres_data:

networks:
  bot: